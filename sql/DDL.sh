#!/bin/sh

DATABASE=budgettest
USER=budgettest
psql --username=$USER $DATABASE << EOF

DROP TABLE IF EXISTS ROLES CASCADE;
CREATE TABLE ROLES(
  ID INTEGER,
  NAME TEXT UNIQUE NOT NULL,
  PRIMARY KEY(ID));
INSERT INTO ROLES(ID, NAME) VALUES(0, 'admin');
INSERT INTO ROLES(ID, NAME) VALUES(1, 'user');
  
DROP TABLE IF EXISTS USERS CASCADE;
CREATE TABLE USERS(
  ID SERIAL,
  ROLEID INTEGER REFERENCES ROLES(ID) NOT NULL,
  NAME TEXT UNIQUE NOT NULL,
  PASSWORD TEXT NOT NULL,
  SHOW INTEGER NOT NULL CHECK(SHOW = 0 OR SHOW = 1),
  LIM INTEGER NOT NULL CHECK(LIM >= 0),
  PRIMARY KEY(ID));
INSERT INTO USERS(NAME, PASSWORD, ROLEID, SHOW, LIM) VALUES ('ward', 'kd/Z3bQZiv/FwZTNjObTOP3kcOI=', 0, 1, 0);
INSERT INTO USERS(NAME, PASSWORD, ROLEID, SHOW, LIM) VALUES ('peter', 'kd/Z3bQZiv/FwZTNjObTOP3kcOI=', 1, 1, 0);
INSERT INTO USERS(NAME, PASSWORD, ROLEID, SHOW, LIM) VALUES ('katie', 'kd/Z3bQZiv/FwZTNjObTOP3kcOI=', 1, 1, 0);
INSERT INTO USERS(NAME, PASSWORD, ROLEID, SHOW, LIM) VALUES ('jamie', 'kd/Z3bQZiv/FwZTNjObTOP3kcOI=', 1, 1, 0);

DROP TABLE IF EXISTS ACCOUNT CASCADE;
CREATE TABLE ACCOUNT(
  ID SERIAL,
  OWNERID INTEGER REFERENCES USERS(ID) NOT NULL,
  NAME TEXT NOT NULL,
  PUB INTEGER NOT NULL CHECK(PUB = 0 OR PUB = 1), 
  HIDE INTEGER NOT NULL CHECK(HIDE = 0 OR HIDE = 1),
  UNIQUE (OWNERID, NAME),
  PRIMARY KEY(ID));

DROP TABLE IF EXISTS TRANSACT CASCADE;
CREATE TABLE TRANSACT(
  ID SERIAL,
  TS TIMESTAMP NOT NULL,
  ACCOUNTID INTEGER REFERENCES ACCOUNT(ID) NOT NULL,
  AMOUNT INTEGER NOT NULL,
  BALANCE INTEGER NOT NULL,
  NOTE TEXT,
  UUID TEXT NOT NULL,
  PRIMARY KEY(ID));

DROP TABLE IF EXISTS REQUEST CASCADE;
CREATE TABLE REQUEST(
  ID SERIAL,
  TS TIMESTAMP NOT NULL,
  FROMID INTEGER REFERENCES ACCOUNT(ID) NOT NULL,
  TOID INTEGER REFERENCES ACCOUNT(ID) NOT NULL,
  STATE INTEGER NOT NULL CHECK(STATE = 0 OR STATE = 1),
  AMOUNT INTEGER NOT NULL,
  NOTE TEXT,
  PRIMARY KEY(ID));
  
DROP TABLE IF EXISTS BALANCE CASCADE;
CREATE TABLE BALANCE(
  ID SERIAL,
  TRANSACTID INTEGER NOT NULL,
  PRIMARY KEY(ID));

EOF

